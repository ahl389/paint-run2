{"version":3,"sources":["Avatar.js","Monster.js","Tile.js","Row.js","Board.js","Time.js","Button.js","Tutorial.js","Game.js","levels.js","App.js","serviceWorker.js","index.js"],"names":["Avatar","react_default","a","createElement","className","data-x","this","props","x","data-y","y","Component","Monster","classes","concat","prevDir","data-prevdir","data-id","mon","id","Tile","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tile","React","createRef","state","touched","children","current","childNodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","querySelector","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","target","src_Avatar","key","src_Monster","mtargetx","mtargety","monsters","monster","i","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","rm","push","renderMonster","loc","monsterTarget","touchedA","touchedM","type","avatar","getAvatar","getMonster","data-type","data-loc","ref","Row","mc","src_Tile_0","opacity","row","tiles","rid","renderTile","Board","targetx","targety","rowData","move","bind","assertThisInitialized","monsterRun","updateMonster","utc","updateTouchCount","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","ltc","lowerTouchCount","dir","currentx","currenty","parseInt","right","Math","ceil","random","document","querySelectorAll","updated","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getAttribute","createOpts","floor","targetLoc","calculateTargetLoc","updateBoardStateM","find","setState","allMons","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","lives","filter","e","hasMonster","updateBoardState","paint","unpaint","addEventListener","monsterRunID","setInterval","removeEventListener","clearInterval","rows","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","src_Row","renderRows","Time","endTime","Date","getTime","time","remaining","countdown","timer","now","endLevel","color","style","Tutorial","Game","gameOver","buttonMessage","seconds","level","statusCode","statusMessage","tutorial","handleClick","showTutorial","sc","il","increaseLevel","min","restart","sm","bm","arguments","length","checkForWin","updateGameStatus","locs","rd","grid","r","t","num","col","cols","monsterState","getMonsterState","tileState","getTileState","ut","levelNum","onClick","src_Tutorial_0","src_Time","data-statuscode","src_Board","tileCount","levels","App","console","log","data","reduce","b","elem","processLevelData","src_Game","newLevel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a55f0da.chunk.js","sourcesContent":["import React, { Component } from 'react'; \n\nclass Avatar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className = \"avatar\" data-x={this.props.x} data-y={this.props.y}></div>\n\t\t)\n\t}\t\n}\n\nexport default Avatar;","import React, { Component } from 'react'; \n\nclass Monster extends Component {\n\trender(){\n\t\tvar classes = `monster dir${this.props.prevDir}`;\n\t\treturn (\n\t\t\t<div className = {classes} data-x={this.props.x} data-y={this.props.y} data-prevdir={this.props.prevDir} data-id={this.props.mon.id}></div>\n\t\t)\n\t}\n}\n\nexport default Monster;","import React, { Component } from 'react'; \nimport Avatar from './Avatar.js';\nimport Monster from './Monster.js';\n\nclass Tile extends Component {\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.tile = React.createRef();\n\t\tthis.state = {\n\t\t\ttouched: false\n\t\t};\n\t}\n\t\n\thasAvatar(){\n\t\tvar children = this.tile.current.childNodes;\n\t\tfor (let child of children) {\n\t\t\tvar avatar = child.querySelector('.avatar');\n\t\t\t\n\t\t\tif (avatar) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\thasMonster(){\n\t\tvar children = this.tile.current.childNodes;\n\t\tfor (let child of children) {\n\t\t\tvar monster = child.querySelector('.monster');\n\t\t\t\n\t\t\tif (monster) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAvatar(){\n\t\tif (this.props.tile.target) {\n\t\t\treturn (\n\t\t\t\t<Avatar \n\t\t\t\t\tx={this.props.tile.x} \n\t\t\t\t\ty={this.props.tile.y} \n\t\t\t\t\ttile={this}\n\t\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\t\n\trenderMonster(key, mon){\n\t\treturn (\n\t\t\t<Monster key={key} mon={mon} x={mon.mtargetx} y={mon.mtargety} prevDir={mon.prevDir}/>\n\t\t);\n\t}\n\t\n\tgetMonster(){\n\t\tvar monsters = [];\n\t\tif (this.props.monster) {\n\t\t\tvar i = 0;\n\n\t\t\tfor (let mon of this.props.rm){\n\t\t\t\tmonsters.push(this.renderMonster(i, mon))\n\t\t\t\ti++;\n\t\t\t}\n\t\t\t\n\t\t\treturn monsters;\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst tile = this.props.tile;\n\t\t\n\t\tconst loc = tile.x + '-' + tile.y;\n\t\tconst target = this.props.target ? 'target' : '';\n\t\tconst monsterTarget = this.props.monsterTarget ? 'targetM' : ''\n\t\tconst touchedA = tile.touchedA ? 'touchedA' : '';\n\t\tconst touchedM = tile.touchedM ? 'touchedM' : '';\n\t\tconst type = tile.type;\n\t\tconst avatar = this.getAvatar();\n\t\tconst monster = this.getMonster();\n\t\t\n\t\tconst classes = `loc ${type} \n\t\t\t\t\t\t\t${target}\n\t\t\t\t\t\t\t${monsterTarget}\n\t\t\t\t\t\t\t${touchedA} \n\t\t\t\t\t\t\t${touchedM} \n\t\t\t\t\t\t\t${avatar ? 'avatarT' : ''}\n\t\t\t\t\t\t\t${monster ? 'monsterT' : ''}`;\n\t\t\n\t\treturn (\n\t\t\t<div className={classes} data-type={type} data-loc={loc} data-x={tile.x} data-y={tile.y} ref={this.tile}>\n\t\t\t\t{avatar}\n\t\t\t\t{monster}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Tile;\n","import React, { Component } from 'react'; \nimport Tile from './Tile.js';\n\nclass Row extends Component {\n\t// renderTile(key, tile, target, monsterTarget, mtx, mty, mc) {\n\trenderTile(key, tile, target, monsterTarget, rm, mc) {\n\t\treturn(\n\t\t\t<Tile \n\t\t\t\tkey={key} \n\t\t\t\ttile={tile}\n\t\t\t\ttarget={target}\n\t\t\t\tmonster={monsterTarget} \n\t\t\t\trm={rm}\n\t\t\t\t// mtx={mtx}\n// \t\t\t\tmty={mty}\n\t\t\t\tmc={mc} \n\t\t\t\topacity={this.props.opacity}\n\t\t\t\t/>\n\t\t)\n\t}\n\t\n\trender(){\n\t\tvar id = 0;\n\t\tvar row = [];\n\t\tfor (let tile of this.props.tiles) {\n\t\t\tvar y = this.props.rid;\n\t\t\tvar x = id;\n\t\t\tvar key = x + \"-\" + y;\n\t\t\tvar monsters = this.props.monsters\n\t\t\tvar monsterTarget = false;\n\t\t\tvar mc = 0;\n\t\t\tvar rm = [];\n\t\t\t\n\t\t\tfor (let monster of monsters) {\n\t\t\t\t\n\t\t\t\tif (y == monster.mtargety && x == monster.mtargetx) {\n\t\t\t\t\tmonsterTarget = true;\n\t\t\t\t\tmc++;\n\t\t\t\t\trm.push(monster)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// var locClass = tile.type;\n\t\t\trow.push(this.renderTile(key, tile, tile.target, monsterTarget, rm, mc));\n\t\t\tid++;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className = \"row\">\n\t\t\t\t{row}\n\t\t\t\t<div className = \"clear\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Row;","import React, { Component } from 'react'; \nimport Row from './Row.js';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttargetx: 0,\n\t\t\ttargety: 0,\n\t\t\tmonsters: this.props.monsters,\n\t\t\ttiles: this.props.rowData\n\t\t}\n\t\t\n\t\tthis.monsters = this.props.monsters;\n\t\t//this.tileState = this.props.rowData;\n\t\t\n\t\tthis.move = this.move.bind(this);\n\t\tthis.monsterRun = this.monsterRun.bind(this)\n\t\tthis.updateMonster = this.updateMonster.bind(this)\n\t\t//this.countdown = this.countdown.bind(this)\n\t\t//this.timeLeft = this.props.level.time\n\t}\n\n\tpaint(targetx, targety){\n\t\tvar tiles = this.state.tiles;\n\n\t\tfor (let row of tiles) {\n\t\t\tfor (let tile of row) {\n\t\t\t\tif (tile.x == targetx && tile.y == targety) {\n\t\t\t\t\ttile.target = true;\n\n\t\t\t\t\tif (!tile.touchedA) {\n\t\t\t\t\t\ttile.touchedA = true;\n\t\t\t\t\t\ttile.touchedM = false;\n\t\t\t\t\t\tvar utc = this.props.updateTouchCount;\n\t\t\t\t\t\tutc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttile.target = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn tiles;\n\t}\n\t\n\tunpaint(targetx, targety){\n\t\tvar tiles = this.state.tiles;\n\t\t\n\t\tfor (let row of tiles) {\n\t\t\tfor (let tile of row) {\n\t\t\t\tif (tile.x == targetx && tile.y == targety) {\n\t\t\t\t\ttile.touchedM = true;\n\t\t\t\t\t\n\t\t\t\t\tif (tile.touchedA) {\n\t\t\t\t\t\ttile.touchedA = false;\n\t\t\t\t\t\tvar ltc = this.props.lowerTouchCount;\n\t\t\t\t\t\tltc();\n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t}\n\t\t}\n\n\t\treturn tiles;\n\t}\n\t\n\tcalculateTargetLoc(dir, currentx, currenty) {\n\t\tvar targetx;\n\t\tvar targety;\n\n\t    if (dir == 1 || dir == \"ArrowRight\") { // moving right\n \t\t\ttargetx = parseInt(currentx) + 1;\n \t\t\ttargety = parseInt(currenty);\n        } else if (dir == 2 || dir == \"ArrowDown\") { // moving down\n \t\t\ttargetx = parseInt(currentx);\n \t\t\ttargety = parseInt(currenty)+1;\n \t\t} else if (dir == 3 || dir == \"ArrowLeft\") { // moving left\n \t\t\ttargetx = parseInt(currentx) - 1;\n \t\t\ttargety = parseInt(currenty);\n \t\t} else if (dir == 4 || dir == \"ArrowUp\") { // moving up\n \t\t\ttargetx = parseInt(currentx);\n \t\t\ttargety = parseInt(currenty) - 1;\n \t\t}\n\t\t\n\t\treturn({targetx: targetx, targety: targety})\n\t}\n\t\n\tcreateOpts(dir) {\n\t\tvar right = dir == 4 ? 1 : dir + 1\n\t\tvar opts = [dir, dir, dir, dir, dir, dir, right, right, right, Math.ceil(Math.random() * 4)];\n\t\treturn opts;\n\t}\n\t\n\tmonsterRun(){\n\t\tvar monsters = document.querySelectorAll('.monster');\n\t\tvar updated = [];\n\t\t\n\t\tfor (let monster of monsters) {\n\t\t\t\n\t\t\tvar dir = parseInt(monster.getAttribute('data-prevdir'));\n\t\t\tvar id = monster.getAttribute('data-id')\n\t\t\tvar dirOpts = this.createOpts(dir);\n\t\t\tvar rand = Math.floor(Math.random() * 9);\n\t\t\tdir = dirOpts[rand]\n\t\t\tvar currentx = monster.getAttribute('data-x');\n\t\t\tvar currenty = monster.getAttribute('data-y');\n\n\t\t\tvar targetLoc = this.calculateTargetLoc(dir, currentx, currenty);\n\t\t\tvar target = document.querySelector(`.tile[data-loc=\"${targetLoc.targetx}-${targetLoc.targety}\"]`);\n\t\t\tvar targetx = targetLoc.targetx;\n\t\t\tvar targety = targetLoc.targety;\n\t\t\t\n\t\t\tif (target != null) {\n\t\t\t\t//this.unpaint(targetx, targety);\n\t\t\t\tthis.updateBoardStateM(targetx, targety);\n\t\t\t} else {\n\t\t\t\tdir = Math.ceil(Math.random() * 4); // proposed tile isn't valid, pick a random new direction\n\t\t\t\tdir = dir + 1 // turn right\n\t\t\t\ttargetx = currentx;\n\t\t\t\ttargety = currenty;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tvar rm = this.monsters.find(mon => mon.id == id);\n\t\t\trm.mtargetx = targetx;\n\t\t\trm.mtargety = targety;\n\t\t\trm.prevDir = dir;\n\t\t\tupdated.push(rm);\n\n\t\t}\n\n\t\tthis.setState({\n\t\t\tmonsters: updated\n\t\t});\n\t}\n\t\n\tupdateMonster(id){\n\t\tvar allMons = this.monsters;\n\n\t\tfor (let monster of allMons) {\n\t\t\tif (monster.id == id) {\n\t\t\t\tmonster.lives = monster.lives - 1\n\t\t\t}\n\t\t}\n\n\t\tthis.monsters = allMons.filter(mon => mon.lives > 0)\n\t}\n\t\n\tmove(e) {\n\t\tvar avatar = document.querySelector('.avatar');\n\t\tvar currentx = avatar.getAttribute('data-x');\n\t\tvar currenty = avatar.getAttribute('data-y');\n\n\t\tvar targetLoc = this.calculateTargetLoc(e.key, currentx, currenty);\n\t\tvar target = document.querySelector(`.tile[data-loc=\"${targetLoc.targetx}-${targetLoc.targety}\"]`);\n\n\t\tif (target != null) {\n\t\t\tvar hasMonster = target.querySelector('.monster');\n\t\t\tif (hasMonster != null) { // you smooshed the monster!\n\t\t\t\tvar id = hasMonster.getAttribute('data-id');\n\t\t\t\tthis.updateMonster(id)\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoardState(targetLoc.targetx, targetLoc.targety);\n\t\t}\n\t}\n\t\n\tupdateBoardState(targetx, targety){\n\t\t// avatar moved, updating board\n\t\tvar x = parseInt(targetx);\n\t\tvar y = parseInt(targety);\n\t\t\n\t\tthis.setState({\n\t\t\ttargetx: x,\n\t\t\ttargety: y,\n\t\t\ttiles: this.paint(x, y)\n\t\t});\n\t}\n\t\n\tupdateBoardStateM(targetx, targety){\n\t\t// monster moved, updating board\n\t\tvar x = parseInt(targetx);\n\t\tvar y = parseInt(targety);\n\t\t\n\t\tthis.setState({\n\t\t\ttiles: this.unpaint(x, y)\n\t\t});\n\t}\n\n\tcomponentDidMount(){\n\t\tdocument.addEventListener(\"keydown\", this.move, false);\n\t\tthis.monsterRunID = setInterval(this.monsterRun, 1000);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tdocument.removeEventListener(\"keydown\", this.move, false);\n\t\tclearInterval(this.monsterRunID);\n\t}\n\t\n\trenderRows(){\n\t\tvar rows = [];\n\t\tvar id = 0;\n\t\tfor (let row of this.state.tiles) {\n\t\t\trows.push(<Row \t\n\t\t\t\t\t\tkey={id} \n\t\t\t\t\t\trid={id} \n\t\t\t\t\t\ttargetx={this.state.targetx} \n\t\t\t\t\t\ttargety={this.state.targety} \n\t\t\t\t\t\tmonsters={this.monsters} \n\t\t\t\t\t\ttiles={row}\n\t\t\t\t\t\t/>\n\t\t\t);\n\t\t\t\n\t\t\tid++;\n\t\t}\n\n\t\treturn rows;\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t\t<div className = \"board\">\n\t\t\t\t\t{ this.renderRows() }\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Board;\n","import React, { Component } from 'react'; \n\nclass Time extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tendTime: new Date().getTime() + parseInt(this.props.time),\n\t\t\tremaining: Math.ceil(parseInt(this.props.time)/1000)\n\t\t}\n\t\t\n\t\tthis.countdown = this.countdown.bind(this)\n\t}\n\t\n\tcomponentDidMount(){\t\n\t\tthis.timer = setInterval(this.countdown, 1000)\n\t}\n\n\tcomponentWillUnmount(){\n\t\tclearInterval(this.timer);\n\t}\n\t\n\tcountdown() {\n\t\tvar now = new Date().getTime();\n\t\tvar remaining = Math.ceil( (parseInt(this.state.endTime) - now)/1000 );\n\t\tvar endLevel = this.props.endLevel;\n\t\t\n\t\tthis.setState({\n\t\t\tremaining: remaining\n\t\t});\n\t\t\n\t\tif (remaining < 0) {\n\t\t\tendLevel();\n\t\t}\n\t}\n\t\n\trender(){\n\t\tvar classes = 'countdown-timer flasher';\n\t\tvar color = '#79cdcd';\n\t\t\n\t\tif (this.state.remaining <= 3) {\n\t\t\t//classes = classes + ' flasher';\n\t\t\tcolor = 'red'\n\t\t}\n\t\t\n\t\treturn(\n\t\t\t<div className=\"time\"><span className={classes} style={{color: color}}>{this.state.remaining}</span><br></br>seconds</div>\n\t\t);\n\t}\n}\n\nexport default Time;","import React, { Component } from 'react'; \n\nclass Button extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className = \"button\">\n\t\t\t\t{this.props.message}\n\t\t\t</div>\n\t\t)\n\t}\n\t\n\thandleClick(){\n\t\tvar restart = this.props.restart;\n\t\trestart();\n\t}\n\t\n\tcomponentDidMount(){\n\t\tdocument.addEventListener(\"click\", this.handleClick, false);\n\t}\t\n}\n\nexport default Button;","import React, { Component } from 'react'; \n\nclass Tutorial extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"tutorial\">\n\t\t\t\t<h3>Objective</h3>\n\t\t\t\t<p>Turn all the tiles blue before the timer runs out.</p>\n\t\t\t\t<h3>Movement</h3>\n\t\t\t\t<p>Move with your arrow keys - every tile you touch will turn blue.</p>\n\t\t\t\t<h3>Watch Out</h3>\n\t\t\t\t<p>Opposing forces are turning tiles gold. Undo their work by moving over them. If you touch your rivals three times, they disappear.</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Tutorial;","import React, { Component } from 'react'; \nimport Board from './Board.js';\nimport Button from './Button.js';\nimport Time from './Time.js';\nimport Tutorial from './Tutorial.js';\n\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlives: 3,\n\t\t\tgameOver: true,\n\t\t\ttouched: 1,\n\t\t\tbuttonMessage: \"Begin Game!\",\n\t\t\tseconds: this.props.level.time,\n\t\t\tstatusCode: 'new-game',\n\t\t\tstatusMessage: 'Paint Run',\n\t\t\ttutorial: false\n\t\t}\n\t\t\n\t\tthis.endLevel = this.endLevel.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.showTutorial = this.showTutorial.bind(this);\n\t}\t\n\t\n\thandleClick(e) {\n\t\tvar sc = e.target.getAttribute('data-statuscode');\n\t\t\n\t\tif (sc == 'new-game') {\n\t\t\tthis.setState({\n\t\t\t\tgameOver: false\n\t\t\t});\n\t\t} else if (sc == 'same-level') {\n\t\t\tthis.setState({\n\t\t\t\tgameOver: false,\n\t\t\t\ttouched: 1\n\t\t\t});\n\t\t} else if (sc == 'next-level') {\n\t\t\tvar il = this.props.increaseLevel;\n\t\t\til();\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tlives: Math.min(this.state.lives + 2, 4),\n\t\t\t\tgameOver: false,\n\t\t\t\ttouched: 1\n\t\t\t});\n\t\t} else if (sc == 'restart') {\n\t\t\tthis.setState({\n\t\t\t\tlives: 3,\n\t\t\t\tgameOver: false,\n\t\t\t\ttouched: 1\n\t\t\t});\n\t\t\t\n\t\t\tvar restart = this.props.restart;\n\t\t\trestart();\n\t\t} \n\t}\n\t\n\tshowTutorial(){\n\t\tthis.setState({\n\t\t\ttutorial: !this.state.tutorial\n\t\t})\n\t}\n\n\tupdateGameStatus(gameOver, sm, bm, sc, lives=this.state.lives){\n\t\tthis.setState({\n\t\t\tgameOver: gameOver,\n\t\t\tstatusMessage: sm,\n\t\t\tbuttonMessage: bm,\n\t\t\tlives: lives,\n\t\t\tstatusCode: sc\n\t\t});\n\t}\n\t\n\tupdateTouchCount(){\n\t\tthis.setState({\n\t\t\ttouched: parseInt(this.state.touched) + 1\n\t\t});\n\t\n\t\tthis.checkForWin();\n\t}\n\t\n\tlowerTouchCount(){\n\t\tthis.setState({\n\t\t\ttouched: parseInt(this.state.touched) - 1\n\t\t});\n\t}\n\t\n\tcheckForWin(){\n\t\tif (this.state.touched == this.props.level.tiles) {\n\t\t\tthis.updateGameStatus(true, \"Level Won\", \"Next Level\", 'next-level')\n\t\t} \n\t}\n\t\n\tendLevel() {\n\t\tvar lives = this.state.lives - 1\n\t\tvar gameOver = true;\n\t\t\n\t\tif (lives > 0) {\n\t\t\tvar sm = `Out of time, you have ${lives} lives remaining!`;\n\t\t\tvar bm = 'Try again.';\n\t\t\tvar sc = 'same-level';\n\t\t} else {\n\t\t\tvar sm = `Game Over`;\n\t\t\tvar bm = 'Play again';\n\t\t\tvar sc = 'restart';\n\t\t}\n\t\t\n\t\tthis.updateGameStatus(gameOver, sm, bm, sc, lives)\n\t}\n\t\n\tgetTileState(locs){\n\t\tvar rd = this.props.level.grid;\n\t\tvar tiles = [];\n\n\t\tfor (let y = 0; y < rd.length; y++) {\n\t\t\tlet row = rd[y];\n\t\t\tlet r = [];\n\n\t\t\tfor (let x = 0; x < row.length; x++) {\n\t\t\t\tlet type = row[x] ? 'tile' : 'space';\n\t\t\t\tlet target = false;\n\t\t\t\tlet touchedA = false;\n\t\t\t\tlet touchedM = false;\n\t\t\t\t\n\t\t\t\tfor (let loc of locs) {\n\t\t\t\t\tif (loc.x == x && loc.y == y) {\n\t\t\t\t\t\tif (loc.t == 'a') {\n\t\t\t\t\t\t\ttouchedA = true;\n\t\t\t\t\t\t\ttarget = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttouchedM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tr.push({\tx: x,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\ttouchedA: touchedA,\n\t\t\t\t\t\t\ttouchedM: touchedM\n\t\t\t\t\t\t});\n\t\t\t}\n\n\t\t\ttiles.push(r)\n\t\t}\n\t\treturn tiles;\n\t}\n\t\n\tgetMonsterState(){\n\t\tvar monsters = []\n\t\tvar num = this.props.level.monsters;\n\n\t\tfor (let i = 0; i < num; i++) {\n\t\t\tvar row = Math.floor(Math.random() * this.props.level.rows/2) + Math.floor(this.props.level.rows/2);\n\t\t\tvar col = Math.floor(Math.random() * this.props.level.cols/2) + Math.floor(this.props.level.cols/2);\n\t\t\t\n\t\t\tmonsters.push({\n\t\t\t\tmtargetx: col,\n\t\t\t\tmtargety: row,\n\t\t\t\tprevDir: 1,\n\t\t\t\tlives: 3,\n\t\t\t\tid: i\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn monsters;\n\t}\n\t\n\trender() {\n\t\tvar locs = [{t:'a', x:0, y:0}]\n\t\tvar monsterState = this.getMonsterState();\n\t\tvar tileState = this.getTileState(locs);\n\t\t\n\t\tfor (let monster of monsterState) {\n\t\t\tlocs.push({t:'m', x:monster.mtargetx, y:monster.mtargety})\n\t\t}\n\t\t\n\t\tvar gameOver = this.state.gameOver;\n\t\tvar level = this.props.level;\n\t\t\n\t\tvar ut = this.updateTouchCount;\n\t\tvar ltc = this.lowerTouchCount;\n\t\tvar endLevel = this.endLevel;\n\n\t\treturn (\n\t\t\t<div className=\"game-board\">\n\t\t\t\t<div className = \"header-content\">\n\t\t\t\t\t<div className=\"level\">\n\t\t\t\t\t\t<h1>Level {level.levelNum}</h1>\n\t\t\t\t\t\t<div className=\"tbutton\" onClick={this.showTutorial}>See tutorial</div>\n\t\t\t\t\t\t{ this.state.tutorial\n\t\t\t\t\t\t  ? <Tutorial />\n\t\t\t\t\t\t  : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"details-tab\">\n\t\t\t\t\t\t<div className=\"lives\">{this.state.lives}<br></br><span>lives</span></div>\n\t\t\t\t\t\t<div className=\"status\">{this.state.touched}/{level.tiles}<br></br><span>tiles</span></div>\n\t\t\t\t\t\t{ ! gameOver ? <Time time={this.props.level.time} endLevel={endLevel.bind(this)}/> : '' }\n\t\t\t\t\t</div>\n\t\t\t\t</div><div className = \"clear\"></div>\n\t\t\t\n\t\t\t\t{ ! gameOver \n\t\t\t\t  ? <Board\n\t\t\t\t\t\tmonsters={monsterState}\n\t\t\t\t\t\trowData={tileState}\n\t\t\t\t\t\tlives={this.state.lives}\n\t\t\t\t\t\ttileCount={level.tiles}\n\t\t\t\t\t\tupdateTouchCount={ut.bind(this)}\n\t\t\t\t\t\tlowerTouchCount={ltc.bind(this)}\n\t\t\t\t\t\tlevel={this.props.level}\n\t\t\t\t\t\t/> \n\t\t  \t\t  : <div className = \"gameover\">\n\t\t\t\t\t\t<h1>{this.state.statusMessage}</h1>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.handleClick} data-statuscode={this.state.statusCode}>\n\t\t\t\t        \t{this.state.buttonMessage}\n\t\t\t\t     \t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\t\n}\n\nexport default Game;","var levels = [{\n\ttiles: [\n\t\t[true,\ttrue, \ttrue,\ttrue, \tfalse, \ttrue],\n\t\t[false, false, \tfalse,\ttrue, \ttrue, \ttrue],\n\t\t[false,\tfalse, \ttrue,\ttrue, \ttrue,\ttrue],\n\t\t[true, \tfalse, \ttrue,\ttrue, \tfalse,\ttrue],\n\t\t[true,\ttrue, \ttrue,\ttrue, \tfalse,\ttrue],\n\t\t[false, true, \tfalse,\ttrue, \ttrue,\ttrue]\n\t]\n}, {\n\ttiles: [\n\t\t[true,\ttrue, \ttrue,\ttrue, \ttrue, \ttrue],\n\t\t[false, false, \tfalse,\ttrue, \ttrue, \ttrue],\n\t\t[false,\tfalse, \ttrue,\ttrue, \tfalse,\ttrue],\n\t\t[true, \tfalse, \tfalse,\ttrue, \tfalse,\ttrue],\n\t\t[true,\ttrue, \ttrue,\ttrue, \tfalse,\ttrue],\n\t\t[false, true, \ttrue,\ttrue, \ttrue,\ttrue],\n\t\t[true,  true, \ttrue,\tfalse, \ttrue,\ttrue]\n\t]\n},\n{\n\ttiles: [\n\t\t[true,\tfalse, \ttrue,\ttrue, \tfalse, \ttrue,\tfalse],\n\t\t[true, \tfalse, \tfalse,\ttrue, \ttrue, \ttrue,\ttrue],\n\t\t[true,\tfalse, \ttrue,\ttrue, \tfalse,\ttrue, \ttrue],\n\t\t[true, \tfalse, \ttrue,\ttrue, \tfalse,\ttrue, \tfalse],\n\t\t[true,\ttrue, \ttrue,\tfalse, \tfalse,\ttrue,\tfalse],\n\t\t[false, true, \ttrue,\tfalse, \ttrue,\ttrue,\ttrue],\n\t\t[false, true, \tfalse,\ttrue, \ttrue,\ttrue,\tfalse],\n\t\t[false, true, \tfalse,\ttrue, \tfalse,\ttrue,\tfalse],\n\t\t[false, true, \ttrue,\ttrue, \ttrue,\ttrue,\ttrue]\n\t]\n}];\n\nexport default levels","import React, { Component } from 'react';\n\nimport './App.css';\nimport './Tile.css';\nimport './button.css';\nimport './Tutorial.css';\nimport Game from './Game.js';\nimport levels from './levels.js'\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlevel: 1,\n\t\t}\n\t}\n\t\n\trestart(){\n\t\tthis.setState({\n\t\t\tlevel: 1\n\t\t})\n\t}\n\t\n\tprocessLevelData(){\n\t\tconsole.log(this.state.level - 1)\n\t\tvar data = levels[this.state.level - 1].tiles\n\t\tvar tiles = data.reduce(function(a,b) { return a.concat(b);  })\n  \t \t\t\t\t.filter(function(elem) { return elem })\n\t\t\t\t\t.length;\n\t\t\n\t\tvar level = {\n\t\t\tlevelNum: this.state.level,\n\t\t\tgrid: data,\n\t\t\trows: data.length,\n\t\t\tcols: data[0].length,\n\t\t\ttiles: tiles,\n\t\t\ttime: tiles * 750,\n\t\t\tmonsters: this.state.level + 1\n\t\t}\n\t\n\t\treturn level;\n\t}\n\n\t\n\tincreaseLevel(){\n\t\tthis.setState({\n\t\t\tlevel: this.state.level+1\n\t\t});\n\t}\n\t \n\trender() {\n\t\tvar increaseLevel = this.increaseLevel;\n\t\tvar level = this.processLevelData();\n\t\tvar restart = this.restart;\n\t\t\n\t\treturn (\n\t\t\t<div className = \"body\">\n\t\t      <Game \n\t\t\t\tgameOver={false}\n\t\t\t\tnewLevel={true}\n\t\t\t\tlevel={level}\n\t\t\t\tincreaseLevel={increaseLevel.bind(this)}\n\t\t\t\trestart={restart.bind(this)}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}